import java.io.*;
import java.util.*;
public class Matrix {
    public static void main(String[] args) {
        Kattio  io = new Kattio(System.in, System.out);
        io.println("how large will your matrix be horizontally?");
        int a = io.nextInt();
        io.println("how large will your matrix be vertically?");
        int b = io.nextInt();
        io.println("now, type out all the components of your array, separated by a space, left to right, top to bottom");
        int[][] matrix = new int[a][b];
        for (int i = 0; i < b; i++) {
            for (int j = 0; j < a; j++) {
                matrix[i][j] = io.nextInt();
            }
        }
        io.println("set");
        io.close();
    }
    static void printMatrix(array o) {
        f
    }
    
}
class Kattio extends PrintWriter {
    public Kattio(InputStream i, OutputStream o) {
        super(new BufferedOutputStream(o));
        r = new BufferedReader(new InputStreamReader(i));
    }
    public boolean hasMoreTokens() {
        return peekToken != null;
    }
    public int getInt() {
        return Integer.parseInt(nextToken());
    }
    private BufferedReader r;
    private String line;
    private StringTokenizer st;
    private String token;

    private String peekToken() {
        if (token == null) {
            try {
                while (st == null || st != hasMoreTokens()) {
                    line = r.readLine();
                    if (line == null) {
                        return null;

                    }
                    st = new StringTokenizer(line);
                }
                token32
            }
        }
    }
}